/** @page account-signals Account Signals

 @signals
  @signal account-added
  @signal account-connecting
  @signal account-removed
  @signal account-disabled
  @signal account-enabled
  @signal account-setting-info
  @signal account-set-info
  @signal account-status-changed
 @endsignals

 @see account.h

 <hr>

 @signaldef account-added
  @signalproto
void (*account_added)(PurpleAccount *account);
  @endsignalproto
  @signaldesc
   Emitted when an account is added.
  @param account The account that was added.
 @endsignaldef

 @signaldef account-connecting
  @signalproto
void (*account_connecting)(PurpleAccount *account);
  @endsignalproto
  @signaldesc
   This is called when an account is in the process of connecting.
  @param account The account in the process of connecting.
 @endsignaldef

 @signaldef account-removed
  @signalproto
void (*account_removed)(PurpleAccount *account);
  @endsignalproto
  @signaldesc
   Emitted when an account is removed.
  @param account The account that was removed.
 @endsignaldef

 @signaldef account-disabled
  @signalproto
void (*account_disabled)(PurpleAccount *account);
  @endsignalproto
  @signaldesc
   Emitted when an account is disabled.
  @param account The account that was disabled.
 @endsignaldef

 @signaldef account-enabled
  @signalproto
void (*account_enabled)(PurpleAccount *account);
  @endsignalproto
  @signaldesc
   Emitted when an account is enabled.
  @param account The account that was enabled.
 @endsignaldef

 @signaldef account-setting-info
  @signalproto
void (*account_setting_info)(PurpleAccount *account, const char *new_info);
  @endsignalproto
  @signaldesc
   Emitted when a user is about to send his new user info, or
   profile, to the server.
  @param account  The account that the info will be set on.
  @param new_info The new information to set.
 @endsignaldef

 @signaldef account-set-info
  @signalproto
void (*account_set_info)(PurpleAccount *account, const char *new_info);
  @endsignalproto
  @signaldesc
   Emitted when a user sent his new user info, or profile, to the server.
  @param account  The account that the info was set on.
  @param new_info The new information set.
 @endsignaldef

 @signaldef account-status-changed
  @signalproto
void (*account_status_changed)(PurpleAccount *account, PurpleStatus *old, PurpleStatus *new);
  @endsignalproto
  @signaldesc
   Emitted when the status of an account changes (after the change).
  @param account The account that changed status.
  @param old     The status before change.
  @param new     The status after change.
 @endsignaldef

 @signaldef account-alias-changed
  @signalproto
void (*account_alias_changed)(PurpleAccount *account, const char *old);
  @endsignalproto
  @signaldesc
   Emitted when the alias of an account changes (after the change).
  @param account The account for which the alias was changed.
  @param old     The alias before change.
 @endsignaldef

 @signaldef account-authorization-requested
  @signalproto
void (*account_authorization_requested)(PurpleAccount *account, const char *user);
  @endsignalproto
  @signaldesc
   Emitted when a user requests authorization.
  @param account The account.
  @param user    The name of the user requesting authorization.
  @return Less than zero to deny the request without prompting, greater
          than zero if the request should be granted. If zero is returned,
          then the user will be prompted with the request.
 @endsignaldef

 @signaldef account-authorization-denied
  @signalproto
void (*account_authorization_denied)(PurpleAccount *account, const char *user);
  @endsignalproto
  @signaldesc
   Emitted when the authorization request for a buddy is denied.
  @param account The account.
  @param user    The name of the user requesting authorization.
 @endsignaldef

 @signaldef account-authorization-granted
  @signalproto
void (*account_authorization_granted)(PurpleAccount *account, const char *user);
  @endsignalproto
  @signaldesc
   Emitted when the authorization request for a buddy is granted.
  @param account The account.
  @param user    The name of the user requesting authorization.
 @endsignaldef

 */
// vim: syntax=c.doxygen tw=75 et
